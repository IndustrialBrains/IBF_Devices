<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.5">
  <POU Name="FB_DevAnalogOutput" Id="{c04f47fb-753a-07c6-1304-4d37cf041c4c}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'reflection'}
FUNCTION_BLOCK PUBLIC FB_DevAnalogOutput EXTENDS FB_DevBase 
VAR_INPUT
	fCmdValue		: LREAL := 0 ;
END_VAR
VAR_OUTPUT
	fOutputValue	: LREAL := 0 ;
END_VAR
VAR
	nLimitMin		: INT := -32767 ;
	nLimitMax 		: INT := 32767 ;
	qnHwOut	AT%Q*	: INT := 0 ;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// set device type
IF eDevType = E_Devices.Undefined THEN 
	eDevType := E_Devices.AnalogOut ;
END_IF

// Call base function
SUPER^(refFbFault := refFbFault);


// Call private functions
ExecSetOutput();
ExecSetFeedback();]]></ST>
    </Implementation>
    <Folder Name="Private" Id="{81264718-d2cd-06cb-14d3-b5473936a556}" />
    <Method Name="ExecSetFeedback" Id="{18d9da84-4902-013f-1733-290381c8418e}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD INTERNAL ExecSetFeedback : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Set feedback 
fOutputValue := INT_TO_LREAL(qnHwOut) ;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecSetOutput" Id="{72b429d8-82f0-0371-2b55-cc7f874d4b35}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD INTERNAL ExecSetOutput : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Set Output to physical device
IF bSafetyOk AND (bEnable OR bCmdManual) THEN 
	qnHwOut := LREAL_TO_INT(fCmdValue) ; 
	qnHwOut := LIMIT(nLimitMin, qnHwOut, nLimitMax) ; 
ELSE 
	qnHwOut 	:= 0;
	fCmdValue 	:= 0 ; 
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="Init" Id="{1a41a7d1-7672-0eb4-3599-5ba82b2fb750}">
      <Declaration><![CDATA[METHOD PUBLIC Init : BOOL
VAR_INPUT
	// Location data for messages  
	nId				: UDINT; // Identification number of object
	nParentId		: UDINT; // Id of higher level If aplicable (0 = no parent)
	benableNegative	: BOOL ; // Enable negative values
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// ====== Calculate device id =====
	ExecIdentifyDevice(nId,nParentId, E_ComponentTypes.AnOutput);

	
// ====== set minimum value ========
	IF benableNegative THEN 
		nLimitMin := -32767;
	ELSE
		nLimitMin := 0 ;
	END_IF
	
// ====== Set feedback ======
	bInitOk := TRUE ;
	Init 	:= TRUE ;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>